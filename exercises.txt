**********************************************
Part One: Solidify Terminology
In your own terms, define the following terms:
**********************************************
What is HTTP?
Hyper Text Transfer Protocol - It is the protocol used to transfer information 
across a network (client to/from server)

What is a URL?
Uniform Resource Locator - It is an address to a resource on a network (like a website)

What is DNS?
Domain Naming Service - It allows using names instead of ip addresses

What is a query string?
Parameters that are enterened into the url to affect the response of the server

What are two HTTP verbs and how are they different?
GET - gets the information in the request (does not change server info)
POST - sends information to the server (changes server info)

What is an HTTP request?
what is typed in a browser is an example of HTTP request, 
it is a request from client to server

What is an HTTP response?
the opposite of the request. 
it is the response that the server back to the client

What is an HTTP header? Give a couple examples of request and 
response headers you have seen.
Headers are used to send information from client to server and vice versa
example headers:
User-Agent
Location
Accept
Accept-language
Cache-Control
Set-Cookie

What are the processes that happen when you type 
“http://somesite.com/some/page.html” into a browser?
DNS allows the use of the domain name/host
the client sends a GET request, with headers to the server at somesite.com
more GET requests are probably run to get CSS, JS, hosted images, etc.
the server sends a response with headers that allow the browser to build the DOM 
The browser populates the DOM with the data it receives from various requests



**********************************************
Part Two: Practice Tools
1. Using curl, make a GET request to the icanhazdadjoke.com API to find 
all jokes involving the word “pirate”

curl -H "Accept: application/json" "https://icanhazdadjoke.com/search?term=pirate"

{"current_page":1,
"limit":20,
"next_page":1,
"previous_page":1,
"results":[{"id":"2gii3LeN7Ed","joke":"Why couldn't the kid see the pirate movie? Because it was rated arrr!"},
{"id":"QuscibaMClb","joke":"What does a pirate pay for his corn? A buccaneer!"},
{"id":"SvzIBAQS0Dd","joke":"What did the pirate say on his 80th birthday? Aye Matey!"},
{"id":"exXSCtkOKe","joke":"Why do pirates not know the alphabet? They always get stuck at \"C\"."},
{"id":"SnOf2gqjiqc","joke":"Why are pirates called pirates? Because they arrr!"}],
"search_term":"pirate","status":200,"total_jokes":5,"total_pages":1}


2. Use dig to find what the IP address is for icanhazdadjoke.com
icanhazdadjoke.com.	300	IN	A	104.21.37.176
icanhazdadjoke.com.	300	IN	A	172.67.211.64

3. Make a simple web page and serve it using python3 -m http.server. 
Visit the page in a browser.


**********************************************
Part Three: Explore Dev Tools
Build a very simple HTML form that uses the GET method 
(it can use the same page URL for the action) when the form is submitted.


Add a field or two to the form and, after submitting it, 
explore in Chrome Developer tools how you can view the request and response headers.

Edit the page to change the form type to POST, 
refresh in the browser and re-submit. 
Do you still see the field in the query string? 
Explore in Chrome how you can view the request and response headers, 
as well as the form data.
**********************************************
Part Four: Explore the URL API
At times, it’s useful for your JavaScript to look at the URL of the 
browser window and change how the script works depending on parts of that 
(particularly the query string).

Read about the URL API

Try some of the code examples in the Chrome Console so that you can 
get comfortable with the basic methods and properties for instances 
of the URL class.